<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- auto-config="true" > Automatically registers a login form, BASIC authentication, 
		logout services. use-expressions Enables EL-expressions in the access attribute -->
	<http auto-config="true" use-expressions="true">


		<!--used to define the set of URL patterns that the application is interested 
			in and to configure how they should be handled. It is used to construct the 
			FilterInvocationSecurityMetadataSource used by the FilterSecurityInterceptor -->
		<!--Если попытаться войти без логина на страницу в этом маппинге (например 
			http://localhost:8080/user/), то будет переброшено на страницу, указанную 
			в form-login login-page='pageName.html' -->
		<!-- <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" /> -->
		<!-- <intercept-url pattern="/user**" access="hasRole('ROLE_USER')" /> -->
		<!-- <intercept-url pattern="/welcome**" access="hasRole('ROLE_USER')" 
			/> -->

		<!-- <intercept-url pattern="/" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" 
			/> -->
		<intercept-url pattern="/homeUser" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/addClient" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/editClient" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/editMessage" access="hasRole('ROLE_USER')" />	
		<intercept-url pattern="/add-client" access="hasRole('ROLE_USER')" />	
		
		<intercept-url pattern="/homeAdmin" access="hasRole('ROLE_ADMIN')" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<!-- default-target-url="/welcome" -->
		<form-login login-page="/login" authentication-failure-url="/login?error"
			username-parameter="username" password-parameter="password"
			authentication-success-handler-ref="customSuccessHandler" />

		<logout logout-success-url="/home?logout" />
		<!-- enable csrf protection -->
		<csrf />
	</http>

	<!-- <form-login login-page="/login" username-parameter="j_username" -->
	<!-- password-parameter="j_password" login-processing-url="/j_spring_security_check"/> -->
	<!-- authentication-failure-url="/login.html?error=true" -->

	<!-- <logout logout-url="/j_spring_security_logout" -->
	<!-- logout-success-url="/index" /> -->

	<!--Save logged user in cookie with name key='name' -->
	<!-- <remember-me key="myKey" token-validity-seconds="300" /> -->

	<!-- <csrf /> -->

	<!-- </http> -->

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>

			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from users where username=?"
				authorities-by-username-query="select username, role from user_roles where username =?  " />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="customSuccessHandler"
		class="md.eavertizare.confiurations.CustomSuccessHandler" />

</beans:beans>








<!-- <authentication-manager alias="authenticationManager"> -->
<!-- <authentication-provider user-service-ref="jdbcUserService" /> -->
<!-- </authentication-manager> -->

